// Base Mixins for Terminal Portfolio

// Responsive breakpoints
@mixin mobile {
  @media (max-width: #{$tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet}) and (max-width: #{$desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop}) {
    @content;
  }
}

@mixin large-screen {
  @media (min-width: #{$large}) {
    @content;
  }
}

// Terminal responsive mixins
@mixin terminal-mobile {
  @include mobile {
    .terminal-window {
      margin: 0;
      border-radius: 0;
      height: 100vh;
      max-width: none;
      
      .terminal-header {
        padding: 12px 16px;
        
        .terminal-controls {
          display: none;
        }
      }
      
      .terminal-body {
        padding: 16px;
        font-size: $terminal-font-size-mobile;
      }
      
      .command-input {
        font-size: 16px; // Prevent zoom on iOS
      }
    }
  }
}

@mixin terminal-tablet {
  @include tablet {
    .terminal-window {
      margin: 20px;
      max-width: calc(100vw - 40px);
      height: calc(100vh - 40px);
    }
  }
}

// Focus styles
@mixin focus-ring($color: var(--terminal-accent, #{$default-terminal-accent})) {
  outline: $focus-ring-width solid $color;
  outline-offset: $focus-ring-offset;
}

@mixin focus-visible {
  &:focus-visible {
    @include focus-ring();
  }
  
  // Fallback for browsers that don't support :focus-visible
  &:focus:not(:focus-visible) {
    outline: none;
  }
}

// Button mixins
@mixin terminal-button-base {
  background: transparent;
  border: 1px solid var(--terminal-accent, #{$default-terminal-accent});
  color: var(--terminal-accent, #{$default-terminal-accent});
  padding: 6px 12px;
  border-radius: $border-radius-sm;
  font-family: inherit;
  font-size: 0.9em;
  cursor: pointer;
  transition: all $transition-base ease;
  min-height: $minimum-touch-target;
  
  @include focus-visible;
  
  &:hover {
    background: var(--terminal-accent, #{$default-terminal-accent});
    color: var(--terminal-bg, #{$default-terminal-bg});
    transform: translateY(-1px);
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none;
  }
}

@mixin terminal-button-variant($color) {
  border-color: var(--terminal-#{$color}, #{map-get($color-map, $color)});
  color: var(--terminal-#{$color}, #{map-get($color-map, $color)});
  
  &:hover {
    background: var(--terminal-#{$color}, #{map-get($color-map, $color)});
    color: var(--terminal-bg, #{$default-terminal-bg});
  }
}

// Color map for button variants
$color-map: (
  'success': $default-terminal-success,
  'error': $default-terminal-error,
  'warning': $default-terminal-warning,
  'accent': $default-terminal-accent
);

// Scrollbar styles
@mixin custom-scrollbar($track-color: rgba(255, 255, 255, 0.05), $thumb-color: rgba(255, 255, 255, 0.2)) {
  // Webkit scrollbars
  &::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $border-radius-sm;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $border-radius-sm;
    
    &:hover {
      background: lighten($thumb-color, 10%);
    }
  }
  
  // Firefox scrollbar
  scrollbar-width: thin;
  scrollbar-color: $thumb-color $track-color;
}

// Screen reader only content
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Animation mixins
@mixin fade-in($duration: $transition-base) {
  animation: fade-in $duration ease-out;
}

@mixin slide-in-up($duration: $transition-base) {
  animation: slide-in-up $duration $ease-out;
}

@mixin slide-in-left($duration: $transition-base) {
  animation: slide-in-left $duration $ease-out;
}

// Keyframe animations
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slide-in-up {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slide-in-left {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

// Loading animation
@mixin loading-dots($size: $loading-dot-size, $color: currentColor) {
  display: inline-flex;
  gap: 2px;
  
  .dot {
    width: $size;
    height: $size;
    background: $color;
    border-radius: 50%;
    animation: dot-pulse $loading-animation-duration infinite ease-in-out;
    
    &:nth-child(1) { animation-delay: 0s; }
    &:nth-child(2) { animation-delay: 0.2s; }
    &:nth-child(3) { animation-delay: 0.4s; }
  }
}

@keyframes dot-pulse {
  0%, 80%, 100% {
    opacity: 0.3;
    transform: scale(1);
  }
  40% {
    opacity: 1;
    transform: scale(1.2);
  }
}

// Typography mixins
@mixin terminal-text {
  font-family: var(--terminal-font, #{$font-family-mono});
  font-size: $terminal-font-size;
  line-height: $terminal-line-height;
  color: var(--terminal-text, #{$default-terminal-text});
}

@mixin truncate-text {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

@mixin wrap-text {
  word-wrap: break-word;
  overflow-wrap: break-word;
  hyphens: auto;
}

// Layout mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Theme-aware mixins
@mixin theme-aware-border($alpha: 0.2) {
  border: 1px solid rgba(255, 255, 255, $alpha);
}

@mixin theme-aware-shadow($level: 'md') {
  @if $level == 'sm' {
    box-shadow: $shadow-sm;
  } @else if $level == 'lg' {
    box-shadow: $shadow-lg;
  } @else {
    box-shadow: $shadow-md;
  }
}

// Accessibility mixins
@mixin high-contrast-support {
  @media (prefers-contrast: high) {
    @content;
  }
}

@mixin reduced-motion-support {
  @media (prefers-reduced-motion: reduce) {
    @content;
  }
}

@mixin dark-mode-support {
  @media (prefers-color-scheme: dark) {
    @content;
  }
}

// Interactive element states
@mixin interactive-states($base-color: var(--terminal-accent, #{$default-terminal-accent})) {
  transition: all $transition-base ease;
  
  &:hover {
    color: $base-color;
    cursor: pointer;
  }
  
  &:focus {
    @include focus-ring($base-color);
  }
  
  &:active {
    opacity: 0.8;
  }
  
  &:disabled {
    opacity: 0.5;
    pointer-events: none;
    cursor: not-allowed;
  }
}